@model IEnumerable<KMSI_Projects.Models.Site>

@{
    ViewData["Title"] = "Master Site";
    Layout = "~/Views/Shared/_Layout.cshtml";
}

<div class="content-wrapper">
    <!-- Content Header -->
    <div class="content-header">
        <div class="container-fluid">
            <div class="row mb-2">
                <div class="col-sm-6">
                    <h1 class="m-0">Master Site</h1>
                </div>
                <div class="col-sm-6">
                    <ol class="breadcrumb float-sm-right">
                        <li class="breadcrumb-item"><a href="@Url.Action("Index", "Home")">Home</a></li>
                        <li class="breadcrumb-item active">Master Site</li>
                    </ol>
                </div>
            </div>
        </div>
    </div>

    <!-- Main content -->
    <section class="content">
        <div class="container-fluid">
            <div class="row">
                <div class="col-12">
                    <div class="card">
                        <div class="card-header">
                            <div class="row">
                                <div class="col-sm-6">
                                    <h3 class="card-title">
                                        <i class="fas fa-building me-2"></i>Site Management
                                    </h3>
                                </div>
                                <div class="col-sm-6">
                                    <div class="float-end">
                                        <button type="button" class="btn btn-primary" onclick="openCreateModal()">
                                            <i class="fas fa-plus me-2"></i>Add New Site
                                        </button>
                                    </div>
                                </div>
                            </div>
                        </div>
                        <div class="card-body">
                            <div class="table-responsive">
                                <table id="siteTable" class="table table-bordered table-striped table-hover">
                                    <thead class="table-dark">
                                        <tr>
                                            <th width="10%">Site Code</th>
                                            <th width="20%">Site Name</th>
                                            <th width="15%">Company</th>
                                            <th width="15%">City</th>
                                            <th width="10%">Manager</th>
                                            <th width="10%">Phone</th>
                                            <th width="8%">Status</th>
                                            <th width="12%">Actions</th>
                                        </tr>
                                    </thead>
                                    <tbody>
                                        @foreach (var item in Model)
                                        {
                                            <tr>
                                                <td>
                                                    <strong>@Html.DisplayFor(modelItem => item.SiteCode)</strong>
                                                </td>
                                                <td>@Html.DisplayFor(modelItem => item.SiteName)</td>
                                                <td>
                                                    <span class="badge bg-info">@item.Company.CompanyCode</span>
                                                    <br><small>@item.Company.CompanyName</small>
                                                </td>
                                                <td>@Html.DisplayFor(modelItem => item.City)</td>
                                                <td>@Html.DisplayFor(modelItem => item.ManagerName)</td>
                                                <td>@Html.DisplayFor(modelItem => item.Phone)</td>
                                                <td>
                                                    @if (item.IsActive)
                                                    {
                                                        <span class="badge bg-success">Active</span>
                                                    }
                                                    else
                                                    {
                                                        <span class="badge bg-danger">Inactive</span>
                                                    }
                                                </td>
                                                <td>
                                                    <div class="btn-group" role="group">
                                                        <button type="button" class="btn btn-info btn-sm" onclick="viewDetails(@item.SiteId)" title="View Details">
                                                            <i class="fas fa-eye"></i>
                                                        </button>
                                                        <button type="button" class="btn btn-warning btn-sm" onclick="openEditModal(@item.SiteId)" title="Edit">
                                                            <i class="fas fa-edit"></i>
                                                        </button>
                                                        <button type="button" class="btn btn-danger btn-sm" onclick="deleteSite(@item.SiteId)" title="Delete">
                                                            <i class="fas fa-trash"></i>
                                                        </button>
                                                    </div>
                                                </td>
                                            </tr>
                                        }
                                    </tbody>
                                </table>
                            </div>
                        </div>
                    </div>
                </div>
            </div>
        </div>
    </section>
</div>

<!-- Create/Edit Modal -->
<div class="modal fade" id="siteModal" tabindex="-1" aria-labelledby="siteModalLabel" aria-hidden="true">
    <div class="modal-dialog modal-lg">
        <div class="modal-content">
            <div class="modal-header">
                <h5 class="modal-title" id="siteModalLabel">Add New Site</h5>
                <button type="button" class="btn-close" data-bs-dismiss="modal" aria-label="Close"></button>
            </div>
            <form id="siteForm">
                @Html.AntiForgeryToken()
                <div class="modal-body">
                    <input type="hidden" id="siteId" value="0" />

                    <div class="row">
                        <div class="col-md-6 mb-3">
                            <label for="companyId" class="form-label">Company <span class="text-danger">*</span></label>
                            <select class="form-select" id="companyId" name="CompanyId" required>
                                <option value="">Select Company</option>
                            </select>
                            <div class="invalid-feedback"></div>
                        </div>
                        <div class="col-md-6 mb-3">
                            <label for="siteCode" class="form-label">Site Code <span class="text-danger">*</span></label>
                            <input type="text" class="form-control" id="siteCode" name="SiteCode" required maxlength="10" style="text-transform: uppercase;">
                            <div class="invalid-feedback"></div>
                        </div>
                    </div>

                    <div class="mb-3">
                        <label for="siteName" class="form-label">Site Name <span class="text-danger">*</span></label>
                        <input type="text" class="form-control" id="siteName" name="SiteName" required maxlength="100">
                        <div class="invalid-feedback"></div>
                    </div>

                    <div class="mb-3">
                        <label for="address" class="form-label">Address</label>
                        <textarea class="form-control" id="address" name="Address" rows="3" maxlength="500"></textarea>
                        <div class="invalid-feedback"></div>
                    </div>

                    <div class="row">
                        <div class="col-md-6 mb-3">
                            <label for="city" class="form-label">City</label>
                            <input type="text" class="form-control" id="city" name="City" maxlength="50">
                            <div class="invalid-feedback"></div>
                        </div>
                        <div class="col-md-6 mb-3">
                            <label for="province" class="form-label">Province</label>
                            <input type="text" class="form-control" id="province" name="Province" maxlength="50">
                            <div class="invalid-feedback"></div>
                        </div>
                    </div>

                    <div class="row">
                        <div class="col-md-6 mb-3">
                            <label for="phone" class="form-label">Phone</label>
                            <input type="tel" class="form-control" id="phone" name="Phone" maxlength="20">
                            <div class="invalid-feedback"></div>
                        </div>
                        <div class="col-md-6 mb-3">
                            <label for="email" class="form-label">Email</label>
                            <input type="email" class="form-control" id="email" name="Email" maxlength="100">
                            <div class="invalid-feedback"></div>
                        </div>
                    </div>

                    <div class="row">
                        <div class="col-md-6 mb-3">
                            <label for="managerName" class="form-label">Manager Name</label>
                            <input type="text" class="form-control" id="managerName" name="ManagerName" maxlength="100">
                            <div class="invalid-feedback"></div>
                        </div>
                        <div class="col-md-6 mb-3">
                            <div class="form-check form-switch">
                                <input class="form-check-input" type="checkbox" id="isActive" name="IsActive" checked>
                                <label class="form-check-label" for="isActive">Is Active</label>
                            </div>
                        </div>
                    </div>
                </div>
                <div class="modal-footer">
                    <button type="button" class="btn btn-secondary" data-bs-dismiss="modal">Cancel</button>
                    <button type="submit" class="btn btn-primary" id="saveButton">
                        <i class="fas fa-save me-2"></i>Save Site
                    </button>
                </div>
            </form>
        </div>
    </div>
</div>

<!-- Details Modal -->
<div class="modal fade" id="detailsModal" tabindex="-1" aria-labelledby="detailsModalLabel" aria-hidden="true">
    <div class="modal-dialog modal-lg">
        <div class="modal-content">
            <div class="modal-header">
                <h5 class="modal-title" id="detailsModalLabel">Site Details</h5>
                <button type="button" class="btn-close" data-bs-dismiss="modal" aria-label="Close"></button>
            </div>
            <div class="modal-body" id="detailsContent">
                <!-- Details content will be loaded here -->
            </div>
            <div class="modal-footer">
                <button type="button" class="btn btn-secondary" data-bs-dismiss="modal">Close</button>
            </div>
        </div>
    </div>
</div>

@section Scripts {
    <script>
        // ===================================================================
        // PRODUCTION-READY JAVASCRIPT untuk KMSI Site Module
        // ===================================================================

        // Global configuration dan utility functions
        window.KMSI = window.KMSI || {};

        // Base URL configuration - otomatis detect environment
        KMSI.Config = KMSI.Config || {
            // Otomatis detect base URL dari current location
            getBaseUrl: function() {
                const protocol = window.location.protocol;
                const host = window.location.host;
                const pathArray = window.location.pathname.split('/');

                // Jika ada virtual directory (IIS deployment)
                let basePath = '';
                if (pathArray.length > 1 && pathArray[1] !== '') {
                    // Check if first path segment is likely a virtual directory
                    const firstSegment = pathArray[1].toLowerCase();
                    if (!['site', 'company', 'teacher', 'student', 'home'].includes(firstSegment)) {
                        basePath = '/' + pathArray[1];
                    }
                }

                return protocol + '//' + host + basePath;
            },

            // Build complete URL for API calls
            buildUrl: function(relativePath) {
                const baseUrl = this.getBaseUrl();
                // Ensure relativePath starts with /
                if (!relativePath.startsWith('/')) {
                    relativePath = '/' + relativePath;
                }
                return baseUrl + relativePath;
            },

            // Get anti-forgery token
            getAntiForgeryToken: function() {
                return $('input[name="__RequestVerificationToken"]').val() ||
                       $('meta[name="__RequestVerificationToken"]').attr('content') ||
                       '';
            }
        };

        // Site Module dengan production-ready AJAX calls (mengikuti pola Company)
        KMSI.Site = {
            // Initialize module
            init: function() {
                this.isEditMode = false;
                this.siteTable = null;
                this.bindEvents();
                this.initializeDataTable();
            },

            // Bind event handlers
            bindEvents: function() {
                const self = this;

                // Site code to uppercase
                $(document).on('input', '#siteCode', function() {
                    this.value = this.value.toUpperCase();
                });

                // Form submission
                $(document).on('submit', '#siteForm', function(e) {
                    e.preventDefault();
                    self.submitForm();
                });

                // Modal events
                $('#siteModal').on('hidden.bs.modal', function() {
                    self.resetForm();
                });
            },

            // Initialize DataTable
            initializeDataTable: function() {
                try {
                    if ($.fn.DataTable && $('#siteTable').length) {
                        this.siteTable = KMSI.initDataTable('#siteTable', {
                            order: [[1, 'asc']], // Sort by site name
                            columnDefs: [
                                { targets: [7], orderable: false } // Actions column not sortable
                            ]
                        });
                        console.log('Site DataTable initialized successfully');
                    }
                } catch (error) {
                    console.error('Error initializing DataTable:', error);
                    KMSI.showToast('Error initializing table. Some features may not work properly.', 'warning');
                }
            },

            // Open create modal
            openCreateModal: function() {
                try {
                    this.isEditMode = false;
                    this.resetForm();
                    $('#siteModalLabel').text('Add New Site');
                    $('#saveButton').html('<i class="fas fa-save me-2"></i>Save Site');

                    this.loadCompanies();
                    $('#siteModal').modal('show');
                } catch (error) {
                    console.error('Error opening create modal:', error);
                    KMSI.showToast('Error opening form. Please try again.', 'error');
                }
            },

            // Open edit modal
            openEditModal: function(siteId) {
                try {
                    if (!siteId) {
                        KMSI.showToast('Invalid site ID', 'error');
                        return;
                    }

                    this.isEditMode = true;
                    this.resetForm();
                    $('#siteModalLabel').text('Edit Site');
                    $('#saveButton').html('<i class="fas fa-save me-2"></i>Update Site');

                    // Load site data dengan production-ready URL
                    const url = KMSI.Config.buildUrl('/Site/GetEditForm/' + siteId);

                    $.ajax({
                        url: url,
                        method: 'GET',
                        timeout: 30000, // 30 second timeout
                        headers: {
                            'X-Requested-With': 'XMLHttpRequest'
                        }
                    })
                    .done(function(response) {
                        if (response && response.success) {
                            const site = response.data;
                            KMSI.Site.populateForm(site);
                            KMSI.Site.loadCompanies(response.companies, site.companyId);
                            $('#siteModal').modal('show');
                        } else {
                            KMSI.showToast(response?.message || 'Failed to load site data', 'error');
                        }
                    })
                    .fail(function(xhr, status, error) {
                        console.error('Failed to load site data:', {xhr, status, error});
                        let message = 'Failed to load site data. ';

                        if (status === 'timeout') {
                            message += 'Request timed out.';
                        } else if (xhr.status === 404) {
                            message += 'Site not found.';
                        } else if (xhr.status >= 500) {
                            message += 'Server error occurred.';
                        } else {
                            message += 'Please check your connection and try again.';
                        }

                        KMSI.showToast(message, 'error');
                    });
                } catch (error) {
                    console.error('Error opening edit modal:', error);
                    KMSI.showToast('Error opening edit form. Please try again.', 'error');
                }
            },

            // Populate form with site data
            populateForm: function(site) {
                $('#siteId').val(site.siteId);
                $('#siteCode').val(site.siteCode);
                $('#siteName').val(site.siteName);
                $('#address').val(site.address || '');
                $('#city').val(site.city || '');
                $('#province').val(site.province || '');
                $('#phone').val(site.phone || '');
                $('#email').val(site.email || '');
                $('#managerName').val(site.managerName || '');
                $('#isActive').prop('checked', site.isActive);
            },

            // Submit form (mengikuti pola Company yang tepat)
            submitForm: function() {
                try {
                    const formData = {
                        SiteId: parseInt($('#siteId').val()) || 0,
                        CompanyId: parseInt($('#companyId').val()) || 0,
                        SiteCode: $('#siteCode').val(),
                        SiteName: $('#siteName').val(),
                        Address: $('#address').val(),
                        City: $('#city').val(),
                        Province: $('#province').val(),
                        Phone: $('#phone').val(),
                        Email: $('#email').val(),
                        ManagerName: $('#managerName').val(),
                        IsActive: $('#isActive').is(':checked')
                    };

                    // Build production-ready URL
                    const url = this.isEditMode ?
                        KMSI.Config.buildUrl('/Site/Edit/' + formData.SiteId) :
                        KMSI.Config.buildUrl('/Site/Create');

                    // Clear previous validation errors
                    $('.is-invalid').removeClass('is-invalid');
                    $('.invalid-feedback').text('');

                    // Show loading state
                    const form = document.getElementById('siteForm');
                    const saveButton = $('#saveButton');
                    saveButton.prop('disabled', true);

                    $.ajax({
                        url: url,
                        method: 'POST',
                        data: JSON.stringify(formData),
                        contentType: 'application/json; charset=utf-8',
                        dataType: 'json',
                        timeout: 60000, // 60 second timeout for save operations
                        headers: {
                            'X-Requested-With': 'XMLHttpRequest',
                            'RequestVerificationToken': KMSI.Config.getAntiForgeryToken()
                        }
                    })
                    .done(function(response) {
                        if (response && response.success) {
                            $('#siteModal').modal('hide');
                            KMSI.showToast(response.message || 'Site saved successfully', 'success');

                            // Reload page after short delay
                            setTimeout(function() {
                                window.location.reload();
                            }, 1500);
                        } else {
                            KMSI.Site.handleValidationErrors(response);
                        }
                    })
                    .fail(function(xhr, status, error) {
                        console.error('Save failed:', {xhr, status, error});

                        if (xhr.status === 400 && xhr.responseJSON && xhr.responseJSON.errors) {
                            KMSI.Site.handleValidationErrors(xhr.responseJSON);
                        } else {
                            let message = 'An error occurred while saving the site. ';

                            if (status === 'timeout') {
                                message += 'Request timed out. Please try again.';
                            } else if (xhr.status === 401) {
                                message = 'Your session has expired. Please login again.';
                                setTimeout(() => window.location.href = '/Login', 2000);
                            } else if (xhr.status === 403) {
                                message = 'You do not have permission to perform this action.';
                            } else if (xhr.status >= 500) {
                                message += 'Server error occurred. Please try again later.';
                            } else {
                                message += 'Please check your connection and try again.';
                            }

                            KMSI.showToast(message, 'error');
                        }
                    })
                    .always(function() {
                        // Restore button state
                        saveButton.prop('disabled', false);
                        KMSI.hideLoading(form); // 🔑 ini yang memulihkan input modal
                    });
                } catch (error) {
                    console.error('Error submitting form:', error);
                    KMSI.showToast('Error submitting form. Please try again.', 'error');
                }
            },

            // Handle validation errors
            handleValidationErrors: function(response) {
                if (response && response.errors) {
                    if (Array.isArray(response.errors)) {
                        response.errors.forEach(function(error) {
                            KMSI.showToast(error, 'error');
                        });
                    } else {
                        Object.keys(response.errors).forEach(function(field) {
                            const input = $(`[name="${field}"]`);
                            input.addClass('is-invalid');
                            input.siblings('.invalid-feedback').text(response.errors[field][0]);
                        });
                    }
                } else {
                    KMSI.showToast(response?.message || 'Validation failed', 'error');
                }
            },

            // Load companies
            loadCompanies: function(companies = null, selectedId = null) {
                if (companies) {
                    this.populateCompanies(companies, selectedId);
                } else {
                    const url = KMSI.Config.buildUrl('/Site/GetCreateForm');

                    $.ajax({
                        url: url,
                        method: 'GET',
                        timeout: 30000,
                        headers: {
                            'X-Requested-With': 'XMLHttpRequest'
                        }
                    })
                    .done(function(response) {
                        if (response && response.success) {
                            KMSI.Site.populateCompanies(response.companies);
                        } else {
                            KMSI.showToast(response?.message || 'Failed to load companies', 'error');
                        }
                    })
                    .fail(function(xhr, status, error) {
                        console.error('Failed to load companies:', {xhr, status, error});
                        KMSI.showToast('Failed to load companies. Please try again.', 'error');
                    });
                }
            },

            // Populate companies dropdown
            populateCompanies: function(companies, selectedId = null) {
                const select = $('#companyId');
                select.empty().append('<option value="">Select Company</option>');

                companies.forEach(function(company) {
                    const selected = company.companyId === selectedId ? 'selected' : '';
                    select.append(`<option value="${company.companyId}" ${selected}>${company.companyName}</option>`);
                });
            },

            // View details
            viewDetails: function(siteId) {
                try {
                    $.ajax({
                        url: KMSI.Config.buildUrl(`/Site/Details/${siteId}`),
                        type: 'GET',
                        headers: {
                            'RequestVerificationToken': KMSI.Config.getAntiForgeryToken()
                        },
                        success: function(response) {
                            if (response.success) {
                                const data = response.data;
                                const detailsHtml = `
                                    <div class="row">
                                        <div class="col-md-6">
                                            <p><strong>Site Code:</strong> ${data.siteCode}</p>
                                            <p><strong>Site Name:</strong> ${data.siteName}</p>
                                            <p><strong>Company:</strong> ${data.companyName}</p>
                                            <p><strong>Manager:</strong> ${data.managerName || 'N/A'}</p>
                                            <p><strong>Status:</strong> <span class="badge ${data.isActive ? 'bg-success' : 'bg-danger'}">${data.statusDisplay}</span></p>
                                        </div>
                                        <div class="col-md-6">
                                            <p><strong>City:</strong> ${data.city || 'N/A'}</p>
                                            <p><strong>Province:</strong> ${data.province || 'N/A'}</p>
                                            <p><strong>Phone:</strong> ${data.phone || 'N/A'}</p>
                                            <p><strong>Email:</strong> ${data.email || 'N/A'}</p>
                                            <p><strong>Created:</strong> ${data.createdDate}</p>
                                        </div>
                                    </div>
                                    ${data.address ? `<div class="row"><div class="col-12"><p><strong>Address:</strong> ${data.address}</p></div></div>` : ''}
                                `;

                                $('#detailsContent').html(detailsHtml);
                                $('#detailsModal').modal('show');
                            } else {
                                KMSI.showToast(response.message || 'Error loading site details.', 'error');
                            }
                        },
                        error: function(xhr, status, error) {
                            console.error('Error loading details:', error);
                            KMSI.showToast('Error loading site details. Please try again.', 'error');
                        }
                    });
                } catch (error) {
                    console.error('Error in viewDetails:', error);
                }
            },

            // Delete site
            deleteSite: function(siteId) {
                try {
                    if (!confirm('Are you sure you want to delete this site? This action cannot be undone.')) {
                        return;
                    }

                    $.ajax({
                        url: KMSI.Config.buildUrl(`/Site/Delete/${siteId}`),
                        type: 'POST',
                        headers: {
                            'RequestVerificationToken': KMSI.Config.getAntiForgeryToken()
                        },
                        success: function(response) {
                            if (response.success) {
                                KMSI.showToast(response.message, 'success');
                                setTimeout(() => window.location.reload(), 1500);
                            } else {
                                KMSI.showToast(response.message || 'Error deleting site.', 'error');
                            }
                        },
                        error: function(xhr, status, error) {
                            console.error('Error deleting site:', error);
                            KMSI.showToast('Error deleting site. Please try again.', 'error');
                        }
                    });
                } catch (error) {
                    console.error('Error deleting site:', error);
                    KMSI.showToast('Error deleting site. Please try again.', 'error');
                }
            },

            // Reset form
            resetForm: function() {
                try {
                    $('#siteForm')[0].reset();
                    $('#siteId').val('0');
                    $('.is-invalid').removeClass('is-invalid');
                    $('.invalid-feedback').text('');
                    $('#isActive').prop('checked', true);
                } catch (error) {
                    console.error('Error resetting form:', error);
                }
            }
        };

        // Global functions untuk backward compatibility
        function openCreateModal() {
            KMSI.Site.openCreateModal();
        }

        function openEditModal(siteId) {
            KMSI.Site.openEditModal(siteId);
        }

        function viewDetails(siteId) {
            KMSI.Site.viewDetails(siteId);
        }

        function deleteSite(siteId) {
            KMSI.Site.deleteSite(siteId);
        }

        // Initialize ketika document ready
        $(document).ready(function() {
            try {
                KMSI.Site.init();
                console.log('KMSI Site module initialized - Environment:', KMSI.Config.getBaseUrl());
            } catch (error) {
                console.error('Error initializing KMSI Site module:', error);
                KMSI.showToast('Error initializing page. Please refresh and try again.', 'error');
            }
        });

        // Development/Debug helpers (remove in production)
        if (window.location.hostname === 'localhost') {
            window.KMSI_DEBUG = window.KMSI_DEBUG || {};
            window.KMSI_DEBUG.site = KMSI.Site;
            window.KMSI_DEBUG.testUrl = function(path) {
                console.log('Test URL:', KMSI.Config.buildUrl(path));
            };
        }
    </script>
}